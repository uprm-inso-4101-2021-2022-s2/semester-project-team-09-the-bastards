// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Bellow appears the Models of the database. Originally it was meant to be somewhere else buuut, life is shit

model User {
  uid        Int      @id @unique @default(autoincrement())
  first_name String   @db.VarChar(32)
  last_name  String   @db.VarChar(32)
  birth_date DateTime @db.Date
  Login      Login?
  Patient    Patient?
  Appointment Appointment?
}

model Login {
  id       Int    @id @unique @default(autoincrement())
  user     User   @relation(fields: [user_id], references: [uid]) // 1 to 1 on User
  user_id  Int    @unique
  email    String @unique @db.VarChar(32)
  password String @db.VarChar(32)
}

model Patient {
  pid          Int    @id @default(autoincrement())
  phone_number String @db.VarChar(16)
  user         User   @relation(fields: [user_id], references: [uid])
  user_id      Int    @unique

  review Review?
}

model Medic {
  mid Int @id @unique @default(autoincrement())
  specialization String
  medic_availability MedicAvailability[]
  review             Review?

}

model Schedule {
  sid         Int          @id @default(autoincrement())
  start_time  DateTime     @db.Timestamp()
  end_time    DateTime     @db.Timestamp()
  appointment Appointment?

}

model Appointment {
  aid         Int      @id @default(autoincrement())
  schedule    Schedule @relation(fields: [schedule_id], references: [sid])
  schedule_id Int      @unique
  member_id Int
  member User @relation(fields: [member_id], references: [uid])
  member_role Int

}

model Review {
  rid            Int    @id @default(autoincrement())
  title          String @db.VarChar()
  score          Int
  patient_id     Int    @unique
  medic_id       Int    @unique
  office_id      Int    @unique
  response_title String @db.VarChar(32)
  response_body  String @db.VarChar(512)

  patient Patient @relation(fields: [patient_id], references: [pid])
  medic   Medic   @relation(fields: [medic_id], references: [mid])
  office  Office  @relation(fields: [office_id], references: [oid])

}

model MedicAvailability {
  maid       Int      @id @default(autoincrement())
  start_time DateTime @db.Timestamp()
  end_time   DateTime @db.Timestamp()
  medic_id   Int
  medic      Medic    @relation(fields: [medic_id], references: [mid])

}

model Office {
  oid                 Int      @id @default(autoincrement())
  office_name         String
  office_address      String
  office_phone_number String   @db.VarChar(16)
  office_open         DateTime @db.Timestamp()
  ofice_close         DateTime @db.Timestamp()

  review Review?
}
